{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"work",
				"worker\t(10-task-pull-spawn.py)"
			],
			[
				"cy",
				"cython_c_in_temp"
			],
			[
				"m",
				"modules"
			],
			[
				"i",
				"if\tIf Condition"
			],
			[
				"pl",
				"plot\tfunction"
			],
			[
				"para",
				"parallel"
			],
			[
				"rates",
				"rates_num"
			],
			[
				"num",
				"num_adjustments\tstatement"
			],
			[
				"sed",
				"sediment_class\tmodule"
			],
			[
				"cha",
				"change_matrix_form"
			],
			[
				"BC",
				"BC_top"
			],
			[
				"C1_",
				"C1_new"
			],
			[
				"b",
				"b"
			],
			[
				"get",
				"get_component"
			],
			[
				"Sb",
				"Sb_five_aq"
			],
			[
				"As",
				"As_five_aq"
			],
			[
				"conce",
				"concentration"
			],
			[
				"corre",
				"corrected"
			],
			[
				"equ",
				"equation"
			],
			[
				"aq",
				"aqueous"
			],
			[
				"k",
				"k_b"
			],
			[
				"chl",
				"chalk"
			],
			[
				"equlibrium",
				"equilibrium"
			],
			[
				"depend",
				"dependence"
			],
			[
				"coefi",
				"coefficients"
			],
			[
				"clear",
				"clearpage"
			],
			[
				"cons",
				"constants"
			],
			[
				"experi",
				"experiment"
			],
			[
				"Y_interp",
				"y_interp_1\tstatement"
			],
			[
				"K",
				"K_eq"
			],
			[
				"K_eq_",
				"K_eq_main"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"x",
				"x0_inp"
			],
			[
				"phre",
				"phreqc_string"
			],
			[
				"x0_in",
				"x0_inp\tstatement"
			],
			[
				"at",
				"ATP_exp2\tstatement"
			],
			[
				"time_exp",
				"time_exp_1"
			],
			[
				"exe",
				"Exception"
			],
			[
				"as",
				"as5_aq_exp_3\tstatement"
			],
			[
				"time",
				"time_exp_1\tstatement"
			],
			[
				"tim",
				"time_exp_1\tstatement"
			],
			[
				"inter",
				"interpolate\tfunction"
			],
			[
				"ini",
				"initial_conditions\tstatement"
			],
			[
				"com",
				"components"
			],
			[
				"eq",
				"eq_\tfunction"
			],
			[
				"cls",
				"cls"
			],
			[
				"el",
				"elif\tkeyword"
			],
			[
				"Ma",
				"MagicMock"
			],
			[
				"mes",
				"mesh1d\tstatement"
			],
			[
				"run",
				"run_model"
			],
			[
				"in",
				"increment\tstatement"
			],
			[
				"spec",
				"specie"
			],
			[
				"spe",
				"specie"
			],
			[
				"e",
				"environment"
			],
			[
				"bc_x0_",
				"bc_x0_type"
			],
			[
				"bc_",
				"bc_x0_value"
			],
			[
				"var",
				"var2"
			],
			[
				"d",
				"differentiate_all_1_TS\tfunction"
			],
			[
				"moc",
				"mock_calls\tstatement"
			],
			[
				"mo",
				"mock_calls"
			],
			[
				"di",
				"differentiate_all_1_TS\tfunction"
			],
			[
				"differen",
				"differentiate_transport_terms_all"
			],
			[
				"differe",
				"differentiate_all_1_TS\tfunction"
			],
			[
				"dif",
				"differentiate_current_reaction_term  (function)"
			],
			[
				"rate",
				"rate_law"
			],
			[
				"diffe",
				"differentiate_reaction_term\tfunction"
			],
			[
				"befo",
				"before_all"
			],
			[
				"be",
				"before_all"
			],
			[
				"update_dict_of_conc",
				"update_dictionary_of_concentrations_test"
			],
			[
				"up",
				"update\tfunction"
			],
			[
				"E50",
				"E501"
			],
			[
				"dict",
				"dict_of_conc_vec"
			],
			[
				"add",
				"add_to_dict_of_conc"
			],
			[
				"dic",
				"dict_of_conc_vec"
			],
			[
				"ad",
				"add_to_dict"
			],
			[
				"om",
				"om"
			],
			[
				"ox",
				"ox"
			],
			[
				"cla",
				"assert_called_once_with"
			],
			[
				"pde",
				"pde_stub"
			],
			[
				"B",
				"BvpPde1D"
			],
			[
				"bvp",
				"BvpPde1D"
			],
			[
				"spc",
				"species"
			],
			[
				"call",
				"assert_called_once_with"
			],
			[
				"ret",
				"return_value"
			],
			[
				"S",
				"SpecieCollector"
			],
			[
				"Bv",
				"BvpPde1D"
			],
			[
				"create",
				"create_pde"
			],
			[
				"cre",
				"create_single_container"
			],
			[
				"M",
				"MagicMock"
			],
			[
				"Spe",
				"SpecieCollector"
			],
			[
				"re",
				"return_value"
			],
			[
				"a",
				"add_specie  (function)"
			],
			[
				"xm",
				"x_max"
			],
			[
				"make",
				"make_x_grid"
			],
			[
				"gr",
				"grid_x"
			],
			[
				"bc_x0",
				"bc_x0_value"
			],
			[
				"init_c",
				"init_cond"
			],
			[
				"bc",
				"bc_xn_type"
			],
			[
				"x_",
				"x_max"
			],
			[
				"sol",
				"solve"
			],
			[
				"con",
				"container"
			],
			[
				"bv",
				"bvp2"
			],
			[
				"pop",
				"populate_matrix"
			],
			[
				"popu",
				"populate_matrix"
			],
			[
				"set",
				"set_x0_neumann_bc"
			],
			[
				"op",
				"operator_uj1"
			],
			[
				"xn",
				"xn_is_dirichlet  (variable)"
			],
			[
				"app",
				"apply_boundary_conditions"
			],
			[
				"oper",
				"operator_uj0"
			],
			[
				"u",
				"uj0"
			],
			[
				"BvpOde",
				"BvpOde1D"
			],
			[
				"BvpO",
				"BvpOde1D"
			],
			[
				"BVp",
				"BvpPde"
			],
			[
				"bvp2",
				"bvp2d"
			],
			[
				"grid",
				"grid_x"
			],
			[
				"ode",
				"ode2d"
			],
			[
				"Bo",
				"BoundaryConditions2D"
			],
			[
				"num_",
				"num_y_nodes"
			],
			[
				"test_",
				"test_boundary_conditions_2D"
			],
			[
				"y",
				"y"
			],
			[
				"Bou",
				"BoundaryConditions1D"
			],
			[
				"mode",
				"model_prob_2d"
			],
			[
				"sec",
				"SecondOrderOde1D"
			],
			[
				"so",
				"solution_prob_1"
			],
			[
				"gri",
				"grid_z  (variable)"
			],
			[
				"bcx",
				"bcxn"
			],
			[
				"ass",
				"assert"
			],
			[
				"impo",
				"imp  (module)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Big data/README.md",
			"settings":
			{
				"buffer_size": 1099,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Deep Learning/README.md",
			"settings":
			{
				"buffer_size": 1479,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Deep Learning/mnist/src/checkdata.py",
			"settings":
			{
				"buffer_size": 962,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Deep Learning/mnist/src/network.py",
			"settings":
			{
				"buffer_size": 6428,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Deep Learning/mnist/src/tf_mnist_3layers_mse.py",
			"settings":
			{
				"buffer_size": 1803,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/mpicc.sublime-build",
					""
				],
				[
					"Packages/User/mpicc.sublime-build",
					"Run on 4 CPUs"
				],
				[
					"Packages/User/mpicc.sublime-build",
					"Run on 2 CPUs"
				]
			],
			[
				"Packages/User/mpicc.sublime-build",
				"Run on 2 CPUs"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 320.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"pep",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"breakpo",
				"Python Breakpoints: Toggle"
			],
			[
				"anaco test",
				"Anaconda: Run Current Test"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"break ",
				"Python Breakpoints: Clear All"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"ipyth",
				"Open IPython Notebook"
			],
			[
				"d",
				"Package Control: Disable Package"
			],
			[
				"dis ",
				"Package Control: Disable Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"tit",
				"Convert Case: Title Case"
			],
			[
				"repl ip",
				"SublimeREPL: Python - IPython"
			],
			[
				"latdel",
				"LaTexTools: Delete temporary files"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"pacen",
				"Package Control: Enable Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"conc",
				"Convert Case: Lower Case"
			],
			[
				"latde",
				"LaTexTools: Delete temporary files"
			],
			[
				"align",
				"Table Cleaner: Align Table"
			],
			[
				"ali",
				"Table Cleaner: Align Table"
			],
			[
				"alig",
				"Table Cleaner: Align Table"
			],
			[
				"con",
				"Convert Case: Title Case"
			],
			[
				"conver",
				"Convert Case: Title Case"
			],
			[
				"prefe",
				"Preferences: Settings - User"
			],
			[
				"eval",
				"Worksheet: Evaluate worksheet"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"gistat",
				"Git: Status"
			],
			[
				"ss",
				"Set Syntax: Python"
			],
			[
				"if ",
				"Snippet: if __name__ == '__main__'"
			],
			[
				"sspyt",
				"Set Syntax: Python"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"gista",
				"Git: Status"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"gitsta",
				"Git: Status"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"latexset",
				"Preferences: LaTeXing Settings - User"
			],
			[
				"flowfea",
				"Git-flow: Feature Start"
			],
			[
				"sta",
				"Git: Status"
			],
			[
				"ana",
				"Anaconda: Vagrant Init"
			],
			[
				"featfin",
				"Git-flow: Feature Finish"
			],
			[
				"gitflow",
				"Git-flow: Release Finish"
			],
			[
				"flow",
				"Git-flow: Release Start"
			],
			[
				"feat",
				"Git-flow: Feature Start"
			],
			[
				"gitflo",
				"Git-flow: Release Start"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git",
				"Git: Checkout"
			],
			[
				"gitpus",
				"Git: Push"
			],
			[
				"gitche",
				"Git: Checkout"
			],
			[
				"gitfea",
				"Git-flow: Feature Finish"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"git ",
				"SublimeGit: Documentation"
			],
			[
				"gitpush",
				"Git: Push Current Branch"
			],
			[
				"gitpu",
				"Git: Push"
			],
			[
				"gitfl",
				"Git-flow: Feature Finish"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"PackageResourceViewer",
				"PackageResourceViewer: Extract Package"
			],
			[
				"gitf",
				"Git-flow: Feature Start"
			],
			[
				"statu",
				"Git: Status"
			],
			[
				"pcakdis",
				"Package Control: Disable Package"
			],
			[
				"mcca",
				"Anaconda: McCabe complexity check"
			],
			[
				"pep8",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"pylinte",
				"SublimeREPL: Python - Sublime Text Console"
			],
			[
				"brea",
				"Python Breakpoints: Clear All"
			],
			[
				"packains",
				"Package Control: Install Package"
			],
			[
				"ipy",
				"Open IPython Notebook"
			],
			[
				"ipyt",
				"Open IPython Notebook"
			],
			[
				"ipython",
				"Open IPython Notebook"
			],
			[
				"tags",
				"Git: Show Tags"
			],
			[
				"packa",
				"Package Control: Disable Package"
			],
			[
				"pylin",
				"SublimeREPL: Python - IPython"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"ssruby",
				"Set Syntax: Ruby"
			],
			[
				"ssc",
				"Set Syntax: C++11"
			],
			[
				"linter",
				"SublimeLinter: Show Errors on Save"
			],
			[
				"liner user",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"lintersett",
				"Preferences: SublimeLinter Settings – Default"
			],
			[
				"packare",
				"Package Control: Remove Package"
			],
			[
				"sftp",
				"SFTP: Edit Server…"
			],
			[
				"stack",
				"Stackoverflow: Search Selection"
			],
			[
				"case",
				"Convert Case: camelCase"
			],
			[
				"brak",
				"BracketHighlighter: Toggle High Visibility Mode"
			],
			[
				"high",
				"BracketHighlighter: Toggle String Bracket Escape Mode"
			],
			[
				"bracke",
				"BracketHighlighter: Toggle High Visibility Mode"
			],
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"gdb",
				"SublimeGDB: Step Out"
			],
			[
				"linteruser",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"linterset",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"pcak",
				"Package Control: Enable Package"
			],
			[
				"gist",
				"Gist: Open Gist"
			],
			[
				"ssc++",
				"Set Syntax: C++"
			],
			[
				"gdbde",
				"Preferences: SublimeGDB Settings – Default"
			],
			[
				"gdbuser",
				"Preferences: SublimeGDB Settings – User"
			],
			[
				"sublimeuser",
				"Preferences: SublimeGDB Settings – User"
			],
			[
				"gdb sett",
				"Preferences: SublimeGDB Settings – Default"
			],
			[
				"git lo",
				"Git: Log Current File"
			],
			[
				"gua",
				"Guard: Start Guard"
			],
			[
				"gu",
				"Guard: Show Guard Output"
			],
			[
				"plag",
				"Package Control: Install Package"
			],
			[
				"todo",
				"Show TODOs: Open files only"
			],
			[
				"TODO",
				"Show TODOs: Open files only"
			],
			[
				":w",
				":w - Save"
			],
			[
				"gitlo",
				"Git: Log Current File"
			],
			[
				"packena",
				"Package Control: Enable Package"
			],
			[
				"dispaca",
				"Package Control: Disable Package"
			],
			[
				"ctags",
				"CTags: Show Symbols (file)"
			],
			[
				"ctag",
				"CTags: Rebuild Tags"
			],
			[
				":s",
				":w - Save"
			],
			[
				"packaena",
				"Package Control: Enable Package"
			],
			[
				"gitadd",
				"Git: Add..."
			],
			[
				"gitco",
				"Git: Commit"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"ss scr",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"ss p",
				"Set Syntax: Python"
			],
			[
				"ss pyth",
				"Set Syntax: Python"
			],
			[
				"to",
				"Show TODOs: Project and open files"
			],
			[
				"show",
				"Show TODOs: Open files only"
			],
			[
				"tod",
				"Show TODOs: Project and open files"
			]
		],
		"width": 570.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"res",
			"python",
			"which python",
			"python",
			"which python",
			"python",
			"git",
			"ls",
			"git",
			"import os; os.getenv('PATH')",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/MarkelovIgor/git/HPC",
		"/Users/MarkelovIgor/git/HPC/Deep Learning",
		"/Users/MarkelovIgor/git/HPC/Deep Learning/mnist",
		"/Users/MarkelovIgor/git/HPC/Deep Learning/mnist/data",
		"/Users/MarkelovIgor/git/HPC/Deep Learning/mnist/src"
	],
	"file_history":
	[
		"/Users/MarkelovIgor/git/HPC/MPI/day2/exercises/send_recv_2b.c",
		"/Users/MarkelovIgor/git/HPC/MPI/README.md",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMedia/src/test.py",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/vg.py",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/setup.py",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/src/PorousMediaLab.pyx",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/tests/general_tests.py",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/RichardsModel.py",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/PorousMediaLab.py",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/PorousMediaLab.pyx",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/PorousMediaLab.c",
		"/Users/MarkelovIgor/Library/Application Support/Sublime Text 3/Packages/User/pep8_autoformat.sublime-settings",
		"/Users/MarkelovIgor/git/HPC/day 1/fortran/exercises/lenna/README",
		"/Users/MarkelovIgor/git/HPC/day 1/fortran/exercises/lenna/lenna.f90",
		"/Users/MarkelovIgor/git/mixr_light_server/setup.cfg",
		"/Users/MarkelovIgor/git/biogeochemistry/PorousMediaLab/.gitignore",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/examples/pvc_1996_sediment.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/PorousMediaLab.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/setup.cfg",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/.gitignore",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/tests/tests.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/tests/.coveragerc",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/.coverage",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/sediment_v2.sublime-project",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/ftc_example.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/tests.py",
		"/Users/MarkelovIgor/.ssh/config",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/sediment_class.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/pvc_1996_sediment.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/test.py",
		"/Users/MarkelovIgor/Dropbox/Sublime/User/Python.sublime-settings",
		"/Users/MarkelovIgor/.ipython/profile_default/ipython_config.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/rk4_with_eval.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/single_run.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/sediment.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/single_run.m",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/sediment_v2.m",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/class_single_run.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/sediment_init_v2.m",
		"/Users/MarkelovIgor/.ipython/extensions/line_profiler_ext.py",
		"/Users/MarkelovIgor/.ipython/extensions/memory_profiler_ext.py",
		"/Users/MarkelovIgor/git/biogeochemistry/sediment_2.0/MyLake_fake.m",
		"/Users/MarkelovIgor/git/biogeochemistry/phreeqc_calibration_exp/python/template_calibration.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/Jul2016/Sb.csv",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/Jul2016/As.csv",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/Jul2016/test.csv",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/__init__.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/template_calibration_2_with_rel_path.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/__init.py__.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/template_calibration.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/phreeqc_addon.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/phreeqc/Katya/exp 4/Exp4_NO3_sensitivity_new.phr",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_Sb_sens.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_As_sens.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/report/u_exp_report/report.tex",
		"/Users/MarkelovIgor/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_Cr_sens.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/phreeqc_addon.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_NO3_sens.py",
		"/Users/MarkelovIgor/Library/Application Support/MailMate/Resources/KeyBindings/gmail-extended.plist",
		"/Users/MarkelovIgor/Library/Application Support/MailMate/Resources/KeyBindings/composer.plist",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/phreeqc/Katya/exp 4/Exp4_Sb_sensitivity.phr",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/phreeqc/Katya/exp 4/Exp4_Cr_sensitivity.phr",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/Katya exp/As_exp1solid.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/template_sensitivity.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/phreeqc/Katya/exp 4/Exp4_As_sensitivity.phr",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_craie_30.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_craie_21.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_craie_12.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_craie_5.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/report/u_exp_report/bibliography.bib",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/U exp paper/bibliography.bib",
		"/Users/MarkelovIgor/Documents/u_s.txt",
		"/Users/MarkelovIgor/Dropbox/Uaq_wateq4f_U.out",
		"/Users/MarkelovIgor/Documents/u_s.csv",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/U exp/U_exp_craie_12.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_crayeux_30.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_crayeux_12.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_crayeux_21.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_crayeux_5.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/U exp/U_exp_crayeux_21.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/Sens_U_exp_craie_5.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/Sens_U_exp_craie_12.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_crayeux_all_temp_dep.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_craie_all_temp_dep.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_sensitivity.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_crayeux_all.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U exp/U_exp_craie_all_separate.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/Katya exp/As_exp4_speciation_aq.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/As4_exp.py",
		"/Users/MarkelovIgor/Dropbox/Katya/Exp4_Aug6.phr",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/U exp/U_exp_craie_5.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Katya experiment/Sb_exp2_irr.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/phreeqc/U_exp_craie_30.phr",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/phreeqc/As_exp2.phr",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/As_exp1_irr_sens.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/As_exp2_irr.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/As_exp2solid.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/U_exp_craie_30.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/As_exp1_irr_try_to_fit_to_2exp.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/As_exp2.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/U_exp_craie_30.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/As_exp1.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/As_exp1_irr_2012.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/Data_soil_sorption.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/python/Sb_exp1_irr.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/data/As_exp2_speciation_aq.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/As_exp1.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/As_exp2.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/As_exp2_speciation_aq.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/As_exp2solid.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/As_1_exp_freund.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/As_2_exp_b.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/As_2_exp.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/N_1_exp.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/Sb_exp3solid.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/Sb_exp2solid.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/Sb_exp1solid.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/ATP_nM_exp2.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/As_1_exp.py",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/Sb_exp4solid.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/Cr_exp2.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/Sb_exp2.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/NO3_exp2.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/NO3_exp1.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/NO3_exp1.phr",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/Cr_exp1.txt",
		"/Users/MarkelovIgor/Documents/git/biogeochemistry/phreeqc_calibration_exp/Sb_exp1.txt"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"/Users/MarkelovIgor/Documents/git/biogeochemistry/toolbox_python",
			"<open files>,/Users/MarkelovIgor/Documents/git/biogeochemistry/toolbox_python",
			"<open files>",
			"",
			"/",
			"",
			"/",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"k_loop",
			"Comm",
			"num_of_elem",
			"reactions_integrate",
			"transport_integrate",
			"integrate_one_timestep",
			"solve",
			", build_dir=\"build\"",
			" ",
			"integrate_one_timestep",
			"Derivative",
			"transport_integrate",
			"integrate_one_timestep",
			"estimate_time_of_computation",
			"axis=1",
			"_",
			"self",
			"self.",
			",",
			"vg.",
			"def",
			"legen",
			"labels=True",
			"ftc_column",
			"element",
			"conc",
			"coef",
			"),",
			"sum_k",
			"**conc",
			"C_0",
			"runge_kutta_integrate",
			"reset_concentration_matrices",
			"test_and_adjust_cfl",
			"dt",
			"test_and_adjust_cfl",
			"adjust_dt",
			"C_new[element]",
			"<",
			">",
			"sediment",
			"DotDict",
			"Sediment",
			"sediment",
			"Sediment",
			"np.ones(400)",
			"C",
			"y",
			"C0",
			"random.rand",
			"eval",
			"sediment",
			"BC1_top",
			"C1_res",
			"tend",
			"xrange",
			";",
			"sediment_rates",
			"self.species[name]['res'][:, i]",
			"species",
			"C0",
			".*",
			"sediment_rates",
			";",
			"C",
			"self.phi",
			" self.N - 2",
			"self.N - 1",
			"-1",
			"1 * kappa",
			"(1 - self.phi)",
			"self.phi",
			"1 +",
			"* self.phi",
			"* (1",
			"solute",
			"BC_Dirichlet_top",
			"AL_AR_dirichlet",
			"integrate",
			"tend",
			"C1_res[:, i]",
			"C1_res[:, i - 1]",
			"N",
			"N,",
			"phi",
			"csc",
			"C1_old",
			"csc",
			"format = 'csc'",
			".toar",
			"@nb.j",
			"adv_diff",
			"#",
			"sediment",
			"#",
			"full",
			"w",
			"D",
			"d",
			"D",
			"C_F_bottom",
			"C_BC_top",
			"C_init",
			"C_res",
			"D",
			"D,",
			"F_bottom",
			"BC_top",
			"C1",
			", phi, dt, dx, N",
			"phi, dt, dx, N",
			" ",
			"update_bc1_dirichlet",
			"C_",
			"c_",
			"C_",
			"c_",
			"C_",
			"c_",
			"C_",
			"Cold",
			"update_bc_dirichlet",
			"linalg",
			"D1",
			"tend",
			"Sb_three_s ",
			"Sb_five_s_kin ",
			"Sb_five_aq "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\t",
			"five",
			"As_",
			"add_species",
			"Species",
			"SpeciesCollectorForPde",
			"Species",
			"add_species",
			"_",
			"_is_",
			"_",
			"",
			"BoundaryConditions1D",
			"SecondOrderOde1D",
			"x",
			"c",
			"uz",
			"uzz",
			"zn",
			"z0",
			"zn",
			"z0",
			"N",
			"0",
			"mpXLeftBcFunc2D",
			"SetXLeftDirichletBc2D",
			"mXRightBcIsNeumann",
			"mXLeftBcIsNeumann",
			"mXRightBcIsDirichlet",
			"mYRightBcValue",
			"mYLeftBcValue",
			"mXRightBcValue",
			"mYRightBcIsDirichlet",
			"mYRightBcIsNeumann",
			"mYLeftBcIsNeumann",
			"mXLeftBcValue",
			"mXLeftBcIsDirichlet",
			"xRightDerivValue",
			"xLeftDerivValue",
			"xRightValue",
			"xLeftValue",
			"SetXRightNeumannBc1D",
			"yRightDerivValue",
			"yLeftDerivValue",
			"yRightValue",
			"yLeftValue",
			"SetYRightNeumannBc",
			"SetYLeftNeumannBc",
			"SetYRightDirichletBc",
			"SetYLeftDirichletBc",
			"SetXLeftNeumannBc1D",
			"SetXRightDirichletBc1D",
			"SetXLeftDirichletBc1D",
			"mLeftBcIsDirichlet",
			"mRightBcIsDirichlet",
			"mRightBcIsNeumann",
			"mLeftBcIsNeumann",
			"SetRightNeumannBc1D",
			"SetLeftNeumannBc1D",
			"SetRightDirichletBc1D",
			"SetLeftDirichletBc1D",
			"intNodes",
			"candidate_branches",
			"branch_candidates",
			"branch_candidate",
			"quote_branch_candidate",
			"normal",
			"/",
			"/Users/MarkelovIgor/Documents/git/biogeochemistry",
			"/",
			"/Users/MarkelovIgor/Documents/git/biogeochemistry",
			".*",
			"*",
			"",
			" + ",
			"HS",
			"PO4ads",
			"NO3",
			"HS",
			"OMS",
			"AlOH3",
			"Ca3PO42",
			"Ca2",
			"Ca",
			"Ca2",
			"Ca3PO42",
			"Ca",
			"Ca3PO42",
			"Ca2",
			"Ca3PO42",
			"Ca",
			"Sat_FeS"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Big data/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1099,
						"regions":
						{
						},
						"selection":
						[
							[
								1004,
								1004
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 97,
								"count": 174,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/MarkdownEditing/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Deep Learning/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1479,
						"regions":
						{
						},
						"selection":
						[
							[
								1479,
								1479
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 415,
								"count": 222,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/MarkdownEditing/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Deep Learning/mnist/src/checkdata.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 962,
						"regions":
						{
						},
						"selection":
						[
							[
								797,
								797
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 13,
								"count": 80,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Solarized-ocean (SL) (SublimePythonIDE).tmTheme",
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python Improved/PythonImproved.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Deep Learning/mnist/src/network.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6428,
						"regions":
						{
						},
						"selection":
						[
							[
								5773,
								5773
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 55,
								"count": 628,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5773,
										5774
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										5772,
										5773
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Solarized-ocean (SL) (SublimePythonIDE).tmTheme",
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python Improved/PythonImproved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1838.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Deep Learning/mnist/src/tf_mnist_3layers_mse.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1803,
						"regions":
						{
						},
						"selection":
						[
							[
								668,
								668
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 0,
								"count": 104,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Solarized-ocean (SL) (SublimePythonIDE).tmTheme",
							"syntax": "Packages/Python Improved/PythonImproved.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CppYCM.10":
	{
		"height": 0.0
	},
	"output.CppYCM.11":
	{
		"height": 0.0
	},
	"output.CppYCM.16":
	{
		"height": 0.0
	},
	"output.CppYCM.2":
	{
		"height": 0.0
	},
	"output.CppYCM.3":
	{
		"height": 0.0
	},
	"output.CppYCM.4":
	{
		"height": 0.0
	},
	"output.CppYCM.5":
	{
		"height": 0.0
	},
	"output.CppYCM.9":
	{
		"height": 0.0
	},
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 146.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 114.0
	},
	"output.git-checkout":
	{
		"height": 110.0
	},
	"output.git-commit":
	{
		"height": 110.0
	},
	"output.git-flow-feature-finish":
	{
		"height": 110.0
	},
	"output.git-flow-feature-start":
	{
		"height": 110.0
	},
	"output.git-flow-init":
	{
		"height": 110.0
	},
	"output.git-flow-release-finish":
	{
		"height": 110.0
	},
	"output.git-flow-release-start":
	{
		"height": 110.0
	},
	"output.git-push":
	{
		"height": 110.0
	},
	"output.guard":
	{
		"height": 114.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/python3.sublime-build",
	"project": "HPC.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ode",
				"src/OdeSolver.py"
			],
			[
				"set",
				"setup.py"
			],
			[
				"poro",
				"PorousMediaLab.py"
			],
			[
				"por",
				"PorousMediaLab.py"
			],
			[
				"test",
				"tests/general_tests.py"
			],
			[
				"ign",
				".gitignore"
			],
			[
				"cfg",
				"setup.cfg"
			],
			[
				"giti",
				".gitignore"
			],
			[
				"pro",
				"PorousMediaLab.py"
			],
			[
				"ftc",
				"ftc_example.py"
			],
			[
				"sed",
				"sediment_class.py"
			],
			[
				"sedi",
				"sediment_class.py"
			],
			[
				"single",
				"single_run.py"
			],
			[
				"tes",
				"test.py"
			],
			[
				"sedc",
				"sediment_class.py"
			],
			[
				"sbcali",
				"phreeqc_calibration_exp/python/Katya experiment/Jul2016/Sb_calib.py"
			],
			[
				"ascal",
				"phreeqc_calibration_exp/python/Katya experiment/Jul2016/As_calib.py"
			],
			[
				"phreeqc_addon",
				"phreeqc_calibration_exp/python/phreeqc_addon.py"
			],
			[
				"te",
				"phreeqc_calibration_exp/python/template_calibration.py"
			],
			[
				"templa",
				"phreeqc_calibration_exp/python/template_calibration.py"
			],
			[
				"as",
				"phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_As_sens.py"
			],
			[
				"asexp4sens",
				"phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_As_sens.py"
			],
			[
				"no3new",
				"phreeqc_calibration_exp/phreeqc/Katya/exp 4/Exp4_NO3_sensitivity_new.phr"
			],
			[
				"no3sens",
				"phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_NO3_sens.py"
			],
			[
				"exp4crse",
				"phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_Cr_sens.py"
			],
			[
				"exp4sbsens",
				"phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_Sb_sens.py"
			],
			[
				"exp4no",
				"phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_NO3_sens.py"
			],
			[
				"exp4crsen",
				"phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_Cr_sens.py"
			],
			[
				"",
				"phreeqc_calibration_exp/phreeqc/Katya/exp 4/Exp4_Cr_sensitivity.phr"
			],
			[
				"exp4as",
				"phreeqc_calibration_exp/python/Katya experiment/exp 4 sens/Exp4_As_sens.py"
			],
			[
				"exp4",
				"phreeqc_calibration_exp/phreeqc/Katya/exp 4/Exp4_As_sensitivity.phr"
			],
			[
				"sen",
				"phreeqc_calibration_exp/python/template_sensitivity.py"
			],
			[
				"bib",
				"U exp paper/bibliography.bib"
			],
			[
				"crai30",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_30.py"
			],
			[
				"crai21",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_21.py"
			],
			[
				"crai12",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_12.py"
			],
			[
				"craie5",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_5.py"
			],
			[
				"cray5",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_5.py"
			],
			[
				"craye12",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_12.py"
			],
			[
				"cray21",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_21.py"
			],
			[
				"cray30",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_30.py"
			],
			[
				"cray21tx",
				"phreeqc_calibration_exp/data/U exp/U_exp_crayeux_21.txt"
			],
			[
				"crai5",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_5.py"
			],
			[
				"phree",
				"phreeqc_calibration_exp/python/phreeqc_addon.py"
			],
			[
				"craye21",
				"phreeqc_calibration_exp/data/U exp/U_exp_crayeux_21.txt"
			],
			[
				"cray12",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_12.py"
			],
			[
				"cray",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_5.py"
			],
			[
				"craie21",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_21.py"
			],
			[
				"craie",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_5.py"
			],
			[
				"sens",
				"phreeqc_calibration_exp/python/U exp/Sens_U_exp_craie_5.py"
			],
			[
				"cra",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_12.py"
			],
			[
				"alltemp",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_all_temp_dep.py"
			],
			[
				"tempdep",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_all_temp_dep.py"
			],
			[
				"phre",
				"phreeqc_calibration_exp/python/phreeqc_addon.py"
			],
			[
				"crayextemp",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_all_temp_dep.py"
			],
			[
				"craye5",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_5.py"
			],
			[
				"craie30",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_30.py"
			],
			[
				"cra12",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_21.py"
			],
			[
				"templ",
				"phreeqc_calibration_exp/python/template_sensitivity.py"
			],
			[
				"ucraie5",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_5.py"
			],
			[
				"sne",
				"phreeqc_calibration_exp/python/template_sensitivity.py"
			],
			[
				"craydep",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_all_temp_dep.py"
			],
			[
				"tempde",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_all_temp_dep.py"
			],
			[
				"craie12",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_12.py"
			],
			[
				"cra5",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_5.py"
			],
			[
				"u_exp_craie_12",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_12.py"
			],
			[
				"crai",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_5.py"
			],
			[
				"craye",
				"phreeqc_calibration_exp/python/U exp/U_exp_crayeux_all_temp_dep.py"
			],
			[
				"all",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_all_temp_dep.py"
			],
			[
				"uexpal",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_all.py"
			],
			[
				"u30",
				"phreeqc_calibration_exp/python/U exp/U_exp_craie_30.py"
			],
			[
				"as2irrpy",
				"phreeqc_calibration_exp/python/Katya experiment/Sb_exp2_irr.py"
			],
			[
				"cali",
				"U exp paper/u_calib_sens_markelov.tex"
			],
			[
				"u",
				"python/U exp/U_exp_craie_30.py"
			],
			[
				"p",
				"python/phreeqc_addon.py"
			],
			[
				"as2",
				"phreeqc/As_exp2.phr"
			],
			[
				"assens",
				"python/As_exp1_irr_sens.py"
			],
			[
				"as_exp1",
				"data/As_exp1.txt"
			],
			[
				"asexp1irr",
				"python/As_exp1_irr.py"
			],
			[
				"as_exp2solid",
				"data/As_exp2solid.txt"
			],
			[
				"as_exp1.txt",
				"data/As_exp1.txt"
			],
			[
				"as_exp1.tx",
				"data/As_exp1.txt"
			],
			[
				"as202",
				"python/As_exp1_irr_2012.py"
			],
			[
				"as1py",
				"python/As_exp1_irr.py"
			],
			[
				"asexp2py",
				"python/As_exp2_irr.py"
			],
			[
				"asexp1py",
				"python/As_exp1_irr_2012.py"
			],
			[
				"sbirr",
				"python/Sb_exp1_irr.py"
			],
			[
				"astxt",
				"data/As_exp2.txt"
			],
			[
				"asexpirrpy",
				"python/As_exp2_irr.py"
			],
			[
				"irrpy",
				"python/As_exp1_irr.py"
			],
			[
				"asirrse",
				"python/As_exp1_irr_sens.py"
			],
			[
				"assoli",
				"As_exp2solid.txt"
			],
			[
				"as2b",
				"As_2_exp_b.py"
			],
			[
				"asexp1",
				"As_exp1.txt"
			],
			[
				"as2txt",
				"As_exp2.txt"
			],
			[
				"aq",
				"As_exp2_speciation_aq.txt"
			],
			[
				"asexppy",
				"As_2_exp.py"
			],
			[
				"asexp2",
				"As_exp2solid.txt"
			],
			[
				"sb",
				"Sb_exp2solid.txt"
			],
			[
				"sbsol",
				"Sb_exp1solid.txt"
			],
			[
				"sbso",
				"Sb_exp4solid.txt"
			],
			[
				"atp",
				"ATP_nM_exp2.txt"
			],
			[
				"cr",
				"Cr_exp2.txt"
			],
			[
				"sbexp2",
				"Sb_exp2.txt"
			],
			[
				"no",
				"NO3_exp1.txt"
			],
			[
				"no3",
				"NO3_exp1.txt"
			],
			[
				"sbexp",
				"Sb_exp1.txt"
			],
			[
				"crsoli",
				"Cr_exp1solid.txt"
			],
			[
				"cr_s",
				"Cr_exp2solid.txt"
			],
			[
				"cr_2",
				"Cr_exp2.txt"
			],
			[
				"crs",
				"Cr_exp2solid.txt"
			],
			[
				"cr_exp2sol",
				"Cr_exp2solid.txt"
			],
			[
				"crpy",
				"Cr_1_exp.py"
			],
			[
				"math",
				"math_model.py"
			],
			[
				"bvp",
				"bvp_pde.py"
			],
			[
				"sec",
				"second_order_ode.py"
			],
			[
				"cove",
				".coveragerc"
			],
			[
				"main",
				"main.py"
			],
			[
				"adv",
				"adv_dif_reac.py"
			],
			[
				"spec",
				"specie.py"
			],
			[
				"model",
				"math_model.py"
			],
			[
				"cover",
				".coveragerc"
			],
			[
				"co",
				".coveragerc"
			],
			[
				"sp",
				"specie_collector.py"
			],
			[
				"vp",
				"bvp_ode.py"
			],
			[
				"cf",
				"setup.cfg"
			],
			[
				"help",
				"helpers.py"
			],
			[
				"gu",
				"Guardfile"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "bioe",
		"selected_items":
		[
			[
				"bioe",
				"~/git/biogeochemistry/bioenergetics/bioenergetics.sublime-project"
			],
			[
				"po",
				"~/git/biogeochemistry/PorousMediaLab/PorousMediaLab.sublime-workspace"
			],
			[
				"lang",
				"~/git/biogeochemistry/Langtjern/langtjern.sublime-project"
			],
			[
				"bio",
				"~/git/biogeochemistry/bioenergetics/bioenergetics.sublime-project"
			],
			[
				"lan",
				"~/Documents/git/biogeochemistry/Langtjern/langtjern.sublime-project"
			],
			[
				"",
				"~/Documents/git/biogeochemistry/bioenergetics/bioenergetics.sublime-project"
			],
			[
				"pap",
				"~/Documents/git/biogeochemistry/sediments_paper/paper.sublime-project"
			],
			[
				"data",
				"~/Documents/git/Data-analysis/data.sublime-project"
			],
			[
				"print",
				"~/Documents/git/printchomp/printchomp.sublime-project"
			],
			[
				"prin",
				"~/Documents/git/printchomp/printchomp.sublime-project"
			],
			[
				"p",
				"~/Documents/git/printchomp/printchomp.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 528.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 321.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
